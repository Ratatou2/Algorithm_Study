/*
[백준]
1094, 막대기

[문제파악]
- 지민이는 길이가 64cm인 막대를 가지고 있다. 어느 날, 그는 길이가 Xcm인 막대가 가지고 싶어졌다.
- 지민이는 원래 가지고 있던 막대를 더 작은 막대로 자른다음에, 풀로 붙여서 길이가 Xcm인 막대를 만들려고 한다.
- 막대를 자르는 가장 쉬운 방법은 절반으로 자르는 것이다.
- 지민이는 아래와 같은 과정을 거쳐서 막대를 자르려고 한다.
- 지민이가 가지고 있는 막대의 길이를 모두 더한다.
- 처음에는 64cm 막대 하나만 가지고 있다.
- 이때, 합이 X보다 크다면, 아래와 같은 과정을 반복한다.
- 가지고 있는 막대 중 길이가 가장 짧은 것을 절반으로 자른다.
- 만약, 위에서 자른 막대의 절반 중 하나를 버리고 남아있는 막대의 길이의 합이 X보다 크거나 같다면, 위에서 자른 막대의 절반 중 하나를 버린다.
- 이제, 남아있는 모든 막대를 풀로 붙여서 Xcm를 만든다.
- X가 주어졌을 때, 위의 과정을 거친다면, 몇 개의 막대를 풀로 붙여서 Xcm를 만들 수 있는지 구하는 프로그램을 작성하시오.

[입력]
- 첫째 줄에 X가 주어진다.
- X는 64보다 작거나 같은 자연수이다.

[출력]
- 문제의 과정을 거친다면, 몇 개의 막대를 풀로 붙여서 Xcm를 만들 수 있는지 출력한다.

[구현방법]
- 이게... 뭐람... 이건 또 어떻게...
- 아 64에서 자를수록 2의 배수가 되니까 2진수로 표기하면 될지도?
- 진짜 개별로인 문제 설명 부분
    - '위에서 자른 막대의 절반 중 하나를 버리고 남아있는 막대의 길이의 합이 X보다 크거나 같다면, 위에서 자른 막대의 절반 중 하나를 버린다.'
    - 이게 대체 뭔소린가 수십번을 읽고 또 생각했는데, 그냥 현재 막대 길이의 총합이 X보다 크거나 같으면? 제일 짧은 것을 절반 길이로 자르고, 자른 반은 버린다
    - 이 한마디였다
    - 아니 대체 왜 이렇게 설명하는거임;;;

- 걍 쉽게 말해서 막대 길이가 2진수로 표현 가능한지 체크하는 것이다
- 그리고 그 bit가 몇개인지 (막대가 몇개인지) 체크하면 됨

[보완점]
*/

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        System.out.println(Integer.bitCount(Integer.parseInt(br.readLine())));
    }
}